name: Generate macOS Installer

on:
  workflow_dispatch:
    inputs:
      macos_version:
        type: choice
        description: "macOS Version"
        required: true
        options:
          - Sequoia v15.5
          - Sonoma v14.7.6
          - Ventura v13.7.6
          - Monterey v12.7.4
      file-type:
        type: choice
        description: "Installer Format"
        required: true
        options:
          - DMG
          - ISO
          - ZIP

run-name: Generate macOS Installer - ${{ github.event.inputs.macos_version }} (${{ github.event.inputs.file-type }})

concurrency:
  group: generate-macos-${{ github.event.inputs.macos_version }}-${{ github.event.inputs.file-type }}
  cancel-in-progress: true

env:
  TEMP_DIR: /tmp/installer

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 60
    if: github.repository == 'alsyundawy/MacOS-Downloader-Runner'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract installer details
        id: extract
        run: |
          version="${{ github.event.inputs.macos_version }}"
          # Extract numeric version (after 'v') and codename (before space)
          installer_version=${version##*v}
          installer_codename=${version%% v*}
          file_type="${{ github.event.inputs.file-type }}"
          # Normalize to lowercase
          file_lc=$(echo "$file_type" | tr '[:upper:]' '[:lower:]')
          echo "INSTALLER_VERSION=$installer_version" >> $GITHUB_ENV
          echo "INSTALLER_CODENAME=$installer_codename" >> $GITHUB_ENV
          echo "FILE_TYPE=$file_type" >> $GITHUB_ENV
          echo "FILE_LC=$file_lc" >> $GITHUB_ENV
          mkdir -p "$TEMP_DIR"

      - name: Download full macOS installer
        run: |
          softwareupdate --fetch-full-installer --full-installer-version ${{ env.INSTALLER_VERSION }}

      - name: Prepare installer volume
        run: |
          dmg_path="$TEMP_DIR/${{ env.INSTALLER_CODENAME }}.dmg"
          hdiutil create -o "$dmg_path" -size 16384m -volname "${{ env.INSTALLER_CODENAME }}" -layout SPUD -fs HFS+J
          hdiutil attach "$dmg_path" -noverify -mountpoint "/Volumes/${{ env.INSTALLER_CODENAME }}"

      - name: Create install media
        run: |
          sudo "/Applications/Install macOS ${{ env.INSTALLER_CODENAME }}.app/Contents/Resources/createinstallmedia" --volume "/Volumes/${{ env.INSTALLER_CODENAME }}" --nointeraction
        env:
          DETACH_TIMEOUT: 30

      - name: Unmount volume
        run: hdiutil detach "/Volumes/Install macOS ${{ env.INSTALLER_CODENAME }}" -force

      - name: Generate output format
        run: |
          dmg_path="$TEMP_DIR/${{ env.INSTALLER_CODENAME }}.dmg"
          desktop="${HOME}/Desktop"
          case "${FILE_LC}" in
            dmg)
              mv "$dmg_path" "$desktop/${{ env.INSTALLER_CODENAME }}.dmg" ;;
            iso)
              iso_tmp="$TEMP_DIR/${{ env.INSTALLER_CODENAME }}.cdr"
              hdiutil convert "$dmg_path" -format UDTO -o "$ISO_TMP="$TEMP_DIR/${{ env.INSTALLER_CODENAME }}""
              mv "$ISO_TMP.cdr" "$desktop/${{ env.INSTALLER_CODENAME }}.iso"
              ;; 
            zip)
              cd /Applications
              zip -r "$desktop/${{ env.INSTALLER_CODENAME }}.zip" "Install macOS ${{ env.INSTALLER_CODENAME }}.app"
              ;; 
          esac

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macOS-${{ env.INSTALLER_CODENAME }}-${{ env.FILE_LC }}
          path: "${HOME}/Desktop/${{ env.INSTALLER_CODENAME }}.${{ env.FILE_LC }}"
